// Generated by gencpp from file seeker/enable.msg
// DO NOT EDIT!


#ifndef SEEKER_MESSAGE_ENABLE_H
#define SEEKER_MESSAGE_ENABLE_H

#include <ros/service_traits.h>


#include <seeker/enableRequest.h>
#include <seeker/enableResponse.h>


namespace seeker
{

struct enable
{

typedef enableRequest Request;
typedef enableResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct enable
} // namespace seeker


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::seeker::enable > {
  static const char* value()
  {
    return "09fb03525b03e7ea1fd3992bafd87e16";
  }

  static const char* value(const ::seeker::enable&) { return value(); }
};

template<>
struct DataType< ::seeker::enable > {
  static const char* value()
  {
    return "seeker/enable";
  }

  static const char* value(const ::seeker::enable&) { return value(); }
};


// service_traits::MD5Sum< ::seeker::enableRequest> should match 
// service_traits::MD5Sum< ::seeker::enable > 
template<>
struct MD5Sum< ::seeker::enableRequest>
{
  static const char* value()
  {
    return MD5Sum< ::seeker::enable >::value();
  }
  static const char* value(const ::seeker::enableRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::seeker::enableRequest> should match 
// service_traits::DataType< ::seeker::enable > 
template<>
struct DataType< ::seeker::enableRequest>
{
  static const char* value()
  {
    return DataType< ::seeker::enable >::value();
  }
  static const char* value(const ::seeker::enableRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::seeker::enableResponse> should match 
// service_traits::MD5Sum< ::seeker::enable > 
template<>
struct MD5Sum< ::seeker::enableResponse>
{
  static const char* value()
  {
    return MD5Sum< ::seeker::enable >::value();
  }
  static const char* value(const ::seeker::enableResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::seeker::enableResponse> should match 
// service_traits::DataType< ::seeker::enable > 
template<>
struct DataType< ::seeker::enableResponse>
{
  static const char* value()
  {
    return DataType< ::seeker::enable >::value();
  }
  static const char* value(const ::seeker::enableResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // SEEKER_MESSAGE_ENABLE_H
